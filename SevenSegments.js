/**
 * Seven segment devices provide an inexpensive display of
 * the ten devimal digits 0 1 2 3 4 5 6 7 8  9.
 * Using seven sements write a program that can display 
 * these digits as large console output. 
 */

 /* This is the display grid to write to.
                 0    1     2      3       4     5      6       7     8       9      10    11     12     13    14     
           0
           1    [[ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
           2    [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
           3     [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
           4    [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
           5     [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
           6     [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
           7    [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
           8    [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
           9    [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
           10   [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
           11   [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
           12    [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
           13    [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
           14   [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
               [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `]];

    Define letters as coordinates on this grid
    row three column 5 x=3 y=5
    pixels[3][5];

    That wouldn't work though, if you console logged that it would 
    just print out a *

    so you have to print the whole thing but display only * for on 
    or _ for off

   write a letter, Each letter is an array of arrays of numbers x,y which column to turn on. 
    [[row][col]]*/
const A = [[14,0]];

const graph =   [[` * `,' * ', ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
                [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
                [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
                [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
                [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
                [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
                [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
                [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
                [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
                [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
                [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
                [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
                [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
                [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `],
                [ ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `, ` * `,` * `, ` * `, ` * `, ` * `, ` * `]];

// First figure out how to draw the graph
function drawGraph(pixels) {
    // This is the line we'll write to
    // ERROR ! it's critical to clear the buffer after every line written
    let line = '';
    // i = rows j = columns
    for(let i = 0; i < 15; i++){
        line = '';
        for(let j = 0; j < 15; j++) {
            // add each pixel to the line
            line += pixels[i][j];
        }
        //draw the line before processing the next one
        // consle.log will give you a new line each time.
        console.log(line);
    }
}

drawGraph();